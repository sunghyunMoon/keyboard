{"version":3,"file":"bundle.js","mappings":"mBAEA,ICFO,MACL,GACA,GACA,GACA,GACA,GACA,GACA,GACAA,cACEC,MAAK,GAAY,EACjBA,MAAK,GAAa,EAClBA,MAAK,IACLA,MAAK,GACP,CAEA,KACEA,MAAK,EAAYC,SAASC,eAAe,UACzCF,MAAK,EAAgBC,SAASC,eAAe,QAC7CF,MAAK,EAAcC,SAASC,eAAe,YAC3CF,MAAK,EAAgBC,SAASC,eAAe,eAC7CF,MAAK,EAAWC,SAASC,eAAe,QAC1C,CAEA,KACEF,MAAK,EAAUG,iBAAiB,SAAUH,MAAK,GAC/CA,MAAK,EAAcG,iBAAiB,SAAUH,MAAK,GACnDA,MAAK,EAASG,iBAAiB,QAASH,MAAK,EAASI,KAAKJ,OAC3DC,SAASE,iBAAiB,UAAWH,MAAK,EAAWI,KAAKJ,OAC1DC,SAASE,iBAAiB,QAASH,MAAK,EAASI,KAAKJ,OACtDA,MAAK,EAAYG,iBACf,YACAH,MAAK,EAAaI,KAAKJ,OAEzBC,SAASE,iBAAiB,UAAWH,MAAK,EAAWI,KAAKJ,MAC5D,CACA,GAAaK,GACPL,MAAK,IACTA,MAAK,GAAa,EAClBK,EAAGC,OAAOC,QAAQ,YAAYC,UAAUC,IAAI,UAC9C,CACA,GAAWJ,GACT,GAAIL,MAAK,EAAW,OACpBA,MAAK,GAAa,EAClB,MAAMU,EAAQL,EAAGC,OAAOC,QAAQ,WAC1BI,IAAaD,GAAOF,UAAUI,SAAS,UACvCC,EAAMH,GAAOI,QAAQD,IACvBF,GAAcE,GAAe,UAARA,GAA2B,cAARA,IAC1Cb,MAAK,EAASe,OAASF,GAGrBF,GAAoB,UAARE,IACdb,MAAK,EAASe,OAAS,KAGrBJ,GAAoB,cAARE,IACdb,MAAK,EAASe,MAAQf,MAAK,EAASe,MAAMC,MAAM,GAAI,IAEtDhB,MAAK,EAAYiB,cAAc,YAAYT,UAAUU,OAAO,SAC9D,CAEA,GAASb,GACHL,MAAK,IACTK,EAAGC,OAAOS,MAAQV,EAAGC,OAAOS,MAAMI,QAAQ,gBAAiB,IAC3DnB,MAAK,EAAcQ,UAAUY,OAC3B,QACA,gBAAgBC,KAAKhB,EAAGiB,OAE5B,CACA,GAAWjB,GACLL,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EACFiB,cAAc,cAAcZ,EAAGkB,UAC9Bf,UAAUC,IAAI,UACpB,CACA,GAASJ,GACHL,MAAK,IACTA,MAAK,GAAY,EACjBA,MAAK,EACFiB,cAAc,cAAcZ,EAAGkB,UAC9Bf,UAAUU,OAAO,UACvB,CACA,GAAeb,GACbJ,SAASuB,gBAAgBC,aACvB,QACApB,EAAGC,OAAOoB,QAAU,YAAc,GAEtC,CACA,GAAcrB,GACZJ,SAAS0B,KAAKC,MAAMC,WAAaxB,EAAGC,OAAOS,KAC7C,E","sources":["webpack://react_project/./src/js/index.js","webpack://react_project/./src/js/keyboard.js"],"sourcesContent":["import \"../css/style.css\";\r\nimport { Keyboard } from \"./keyboard\";\r\nnew Keyboard();\r\n","export class Keyboard {\r\n  #switchEl;\r\n  #fontSelectEl;\r\n  #keyboardEl;\r\n  #inputGroupEl;\r\n  #inputEl;\r\n  #keyPress;\r\n  #mouseDown;\r\n  constructor() {\r\n    this.#keyPress = false;\r\n    this.#mouseDown = false;\r\n    this.#assignElement();\r\n    this.#addEvent();\r\n  }\r\n\r\n  #assignElement() {\r\n    this.#switchEl = document.getElementById('switch');\r\n    this.#fontSelectEl = document.getElementById('font');\r\n    this.#keyboardEl = document.getElementById('keyboard');\r\n    this.#inputGroupEl = document.getElementById('input-group');\r\n    this.#inputEl = document.getElementById('input');\r\n  }\r\n\r\n  #addEvent() {\r\n    this.#switchEl.addEventListener('change', this.#onChangeTheme);\r\n    this.#fontSelectEl.addEventListener('change', this.#onChangeFont);\r\n    this.#inputEl.addEventListener('input', this.#onInput.bind(this));\r\n    document.addEventListener('keydown', this.#onKeyDown.bind(this));\r\n    document.addEventListener('keyup', this.#onKeyUp.bind(this));\r\n    this.#keyboardEl.addEventListener(\r\n      'mousedown',\r\n      this.#onMouseDown.bind(this)\r\n    );\r\n    document.addEventListener('mouseup', this.#onMouseUp.bind(this));\r\n  }\r\n  #onMouseDown(ev) {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = true;\r\n    ev.target.closest('div.key')?.classList.add('active');\r\n  }\r\n  #onMouseUp(ev) {\r\n    if (this.#keyPress) return;\r\n    this.#mouseDown = false;\r\n    const keyEl = ev.target.closest('div.key');\r\n    const isActive = !!keyEl?.classList.contains('active');\r\n    const val = keyEl?.dataset.val;\r\n    if (isActive && !!val && val !== 'Space' && val !== 'Backspace') {\r\n      this.#inputEl.value += val;\r\n    }\r\n    // Space\r\n    if (isActive && val === 'Space') {\r\n      this.#inputEl.value += ' ';\r\n    }\r\n    // Backspace\r\n    if (isActive && val === 'Backspace') {\r\n      this.#inputEl.value = this.#inputEl.value.slice(0, -1);\r\n    }\r\n    this.#keyboardEl.querySelector('.active')?.classList.remove('active');\r\n  }\r\n\r\n  #onInput(ev) {\r\n    if (this.#mouseDown) return;\r\n    ev.target.value = ev.target.value.replace(/[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/, '');\r\n    this.#inputGroupEl.classList.toggle(\r\n      'error',\r\n      /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/.test(ev.data)\r\n    );\r\n  }\r\n  #onKeyDown(ev) {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = true;\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${ev.code}]`)\r\n      ?.classList.add('active');\r\n  }\r\n  #onKeyUp(ev) {\r\n    if (this.#mouseDown) return;\r\n    this.#keyPress = false;\r\n    this.#keyboardEl\r\n      .querySelector(`[data-code=${ev.code}]`)\r\n      ?.classList.remove('active');\r\n  }\r\n  #onChangeTheme(ev) {\r\n    document.documentElement.setAttribute(\r\n      'theme',\r\n      ev.target.checked ? 'dark-mode' : ''\r\n    );\r\n  }\r\n  #onChangeFont(ev) {\r\n    document.body.style.fontFamily = ev.target.value;\r\n  }\r\n}\r\n"],"names":["constructor","this","document","getElementById","addEventListener","bind","ev","target","closest","classList","add","keyEl","isActive","contains","val","dataset","value","slice","querySelector","remove","replace","toggle","test","data","code","documentElement","setAttribute","checked","body","style","fontFamily"],"sourceRoot":""}